apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: practice-rust
---
apiVersion: v1
kind: Service
metadata:
  name: test-api-service
  namespace: practice-rust
spec:
  ports:
  - name: test-api-service
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: test-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-api
  name: test-api
  namespace: practice-rust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-api
  template:
    metadata:
      labels:
        app: test-api
    spec:
      containers:
      - image: iyamayuki/test-api:5e68d48-dirty
        imagePullPolicy: IfNotPresent
        name: test-api
        ports:
        - containerPort: 8080
        resources: null
---
apiVersion: v1
data:
  nginx.conf: |
    events {
        worker_connections 512;
    }

    http {
        upstream app {
            server test-api-service:8080;
        }
        server {
            listen 80 default_server;

            location / {
                root    /usr/share/nginx/html;
                index   index.html;
            }

            location /hey {
                proxy_pass http://app/hey;
            }

            location /echo {
                proxy_pass http://app/echo;
            }
        }
    }
kind: ConfigMap
metadata:
  name: nginx-conf-blue
  namespace: practice-rust
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-web
    version: blue
  name: test-web-blue
  namespace: practice-rust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-web
  template:
    metadata:
      labels:
        app: test-web
        version: blue
    spec:
      containers:
      - image: iyamayuki/test-web:5e68d48-dirty
        imagePullPolicy: IfNotPresent
        name: test-web
        ports:
        - containerPort: 80
        resources: null
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
      volumes:
      - configMap:
          name: nginx-conf-blue
        name: nginx-conf
---
apiVersion: v1
data:
  nginx.conf: |
    events {
        worker_connections 512;
    }

    http {
        upstream app {
            server test-api-service:8080;
        }
        server {
            listen 80 default_server;

            location / {
                root    /usr/share/nginx/html;
                index   index.html;
            }

            location /hey {
                proxy_pass http://app/hey;
            }

            location /echo {
                proxy_pass http://app/echo;
            }
        }
    }
kind: ConfigMap
metadata:
  name: nginx-conf-green
  namespace: practice-rust
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-web
    version: green
  name: test-web-green
  namespace: practice-rust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-web
  template:
    metadata:
      labels:
        app: test-web
        version: green
    spec:
      containers:
      - image: iyamayuki/test-web:5e68d48-dirty
        imagePullPolicy: IfNotPresent
        name: test-web
        ports:
        - containerPort: 80
        resources: null
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
      volumes:
      - configMap:
          name: nginx-conf-green
        name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: test-web-service
  namespace: practice-rust
spec:
  ports:
  - name: test-web-service
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: test-web
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: test-web-service
  namespace: practice-rust
spec:
  host: test-web-service
  subsets:
  - labels:
      version: blue
    name: blue
  - labels:
      version: green
    name: green
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: test-gateway
  namespace: practice-rust
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*'
    port:
      name: http
      number: 80
      protocol: HTTP
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: test-web-virtual-service
  namespace: practice-rust
spec:
  gateways:
  - test-gateway
  hosts:
  - '*'
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: test-web-service
        port:
          number: 80
        subset: blue
